---
# input:
# - zowe_build_url: optional, full url of zowe build
# - zowe_build_local: optional, path to zowe build exists locally
- name: Install Zowe Convenience Build
  hosts: all
  gather_facts: false
  become: false

  tasks:

  # ============================================================================
  # prepare ansible environment for install
  - import_role:
      name: common
  # Upload client CA certificate
  - import_role:
      name: common
      tasks_from: validate_variables
    vars:
      variable_list:
        - zos_keystore_mode

  - import_role:
      name: configure
      tasks_from: upload_certificate
    vars:
      filename: APIML_External_Certificate_Authority.cer
  - name: Add the external CA to the keyring
    import_role:
      name: zos
      tasks_from: run_script
    vars:
      script_chdir: "{{ zowe_root_dir }}/bin"
      script_filename: ./apiml_cm.sh
      script_parameters: "--action trust-keyring --zowe-keyring {{ zowe_keyring_alias }} --zowe-userid {{ zowe_runtime_user }} --service-storetype JCERACFKS --certificate {{ work_dir_remote }}/APIML_External_Certificate_Authority.cer --alias amlexca"
    when: zos_keystore_mode is defined and zos_keystore_mode == 'KEYSTORE_MODE_KEYRING'

  - import_role:
      name: zos

  # ============================================================================
  # uninstall zowe
  - name: Uninstall Zowe
    when: zowe_uninstall_before_install|default(True)
    block:
    - import_role:
        name: zowe
        tasks_from: uninstall
    - import_role:
        name: fmid
        tasks_from: uninstall

  # ============================================================================
  - name: Download Zowe from zowe_build_url if it has value
    when: zowe_build_url is defined
    block:
    - name: Download zowe build if zowe_build_url exists
      get_url:
        url: "{{ zowe_build_url }}"
        dest: "{{ work_dir_local }}/{{ inventory_hostname }}/{{ zowe_build_file }}"
      delegate_to: localhost

    - import_role:
        name: common
        tasks_from: upload_file
      vars:
        filename_to_upload: "{{ zowe_build_file }}"
        file_upload_method: sftp
        file_upload_hashcheck: true

  # ============================================================================
  # if zowe_build_local is set, upload to z/OS
  - name: Download Zowe from zowe_build_local if it has value
    when: zowe_build_local is defined
    block:
    - name: Prepare zowe build locally
      copy:
        src: "{{ zowe_build_local }}"
        dest: "{{ work_dir_local }}/{{ inventory_hostname }}/{{ zowe_build_file }}"
      delegate_to: localhost

    - import_role:
        name: common
        tasks_from: upload_file
      vars:
        filename_to_upload: "{{ zowe_build_file }}"
        file_upload_method: sftp
        file_upload_hashcheck: true

  # ============================================================================
  # Install Zowe
  - import_role:
      name: zowe

  # ============================================================================
  # Configure Zowe
  - import_role:
      name: configure

  # ============================================================================
  # Start Zowe
  - import_role:
      name: start
    when: not skip_start|default(False)
