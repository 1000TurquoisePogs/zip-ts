---
# this task will create VSAM data set for Caching Service by executing JCL
#   SZWESAMP(ZWECSVSM)
# this task supposed to run after configure_instance.yml so it will update
# value of ZWE_CACHING_SERVICE_VSAM_DATASET in instance.env.

# Variables:
# - zos_vsam_rls
# - zowe_caching_service_port
# - zowe_caching_service_persistent
# - zowe_caching_service_vsam_dsprefix
# - zowe_caching_vsam_storage_class
# - zowe_caching_vsam_volume

# validate variables
- import_role:
    name: common
    tasks_from: validate_variables
  vars:
    variable_list:
    - zos_vsam_rls
    - zowe_caching_service_port
    - zowe_caching_service_persistent
    - zowe_caching_service_vsam_dsprefix

- name: Check if zowe_caching_vsam_storage_class has a value
  fail:
    msg: zowe_caching_vsam_storage_class is required
  when: zos_vsam_rls and (zowe_caching_vsam_storage_class is not defined or zowe_caching_vsam_storage_class is none or zowe_caching_vsam_storage_class == '')

- name: Check if zowe_caching_vsam_volume has a value
  fail:
    msg: zowe_caching_vsam_volume is required
  when: not zos_vsam_rls and (zowe_caching_vsam_volume is not defined or zowe_caching_vsam_volume is none or zowe_caching_vsam_volume == '')

- name: Set caching service vsam data set name
  set_fact:
    zowe_caching_service_vsam_dsname: "{{ zowe_dataset_prefix }}.{{ zowe_caching_service_vsam_dsprefix }}{{ zowe_instance_id }}"

- name: Remove ZWECSVSM.jcl or ZWECSVSM.raw.jcl if exists
  raw: >-
    rm -f "{{ work_dir_remote }}/ZWECSVSM.raw.jcl";
    rm -f "{{ work_dir_remote }}/ZWECSVSM.jcl"

- name: Copy SZWESAMP(ZWECSVSM) to USS
  raw: cp "//'{{ zowe_dataset_prefix }}.SZWESAMP(ZWECSVSM)'" "{{ work_dir_remote }}/ZWECSVSM.raw.jcl"

- name: Update dsname in ZWECSVSM.jcl
  raw: >-
    cat "{{ work_dir_remote }}/ZWECSVSM.raw.jcl" | \
    sed -e "48,999s/#dsname/{{ zowe_caching_service_vsam_dsname }}/g" | \
    sed -e "48,999s/#storclas/{{ zowe_caching_vsam_storage_class }}/g" | \
    sed -e "48,999s/#volume/{{ zowe_caching_vsam_volume }}/" \
    > "{{ work_dir_remote }}/ZWECSVSM.jcl"

- name: Set ZWEVSVSM job MODE configuration
  raw: >-
    mv "{{ work_dir_remote }}/ZWECSVSM.jcl" "{{ work_dir_remote }}/ZWECSVSM.raw.jcl" && \
    cat "{{ work_dir_remote }}/ZWECSVSM.raw.jcl" | \
    sed -e "s|SET \{1,\}MODE=NONRLS|SET MODE=RLS|" \
    > "{{ work_dir_remote }}/ZWECSVSM.jcl"
  when: zos_vsam_rls

- name: Display ZWECSVSM jcl
  raw: cat "{{ work_dir_remote }}/ZWECSVSM.jcl"

- name: Run ZWECSVSM.jcl
  import_role:
    name: zos
    tasks_from: run_jcl
  vars:
    jcl_filename: "{{ work_dir_remote }}/ZWECSVSM.jcl"

- name: Remove ZWECSVSM.jcl or ZWECSVSM.raw.jcl if exists
  raw: >-
    rm -f "{{ work_dir_remote }}/ZWECSVSM.raw.jcl";
    rm -f "{{ work_dir_remote }}/ZWECSVSM.jcl"

- name: Update instance.env for caching service
  raw: >-
    cat "{{ zowe_instance_dir }}/instance.env" | \
    sed -e "s+^ZWE_CACHING_SERVICE_PORT=.*\$+ZWE_CACHING_SERVICE_PORT={{ zowe_caching_service_port }}+" | \
    sed -e "s+^ZWE_CACHING_SERVICE_PERSISTENT=.*\$+ZWE_CACHING_SERVICE_PERSISTENT={{ zowe_caching_service_persistent }}+" | \
    sed -e "s+^ZWE_CACHING_SERVICE_VSAM_DATASET=.*\$+ZWE_CACHING_SERVICE_VSAM_DATASET={{ zowe_caching_service_vsam_dsname }}+" \
    > "{{ zowe_instance_dir }}/instance.env.tmp" && \
    mv "{{ zowe_instance_dir }}/instance.env.tmp" "{{ zowe_instance_dir }}/instance.env"

- name: Show caching service settings in instance.env
  raw: cat "{{ zowe_instance_dir }}/instance.env" | grep ZWE_CACHING_SERVICE_
