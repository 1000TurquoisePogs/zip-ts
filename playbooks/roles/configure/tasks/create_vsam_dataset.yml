---
# this task will create VSAM data set for Caching Service by executing one
# of these JCL: SZWESAMP(ZWECSVMP), SZWESAMP(ZWECSVPX)
# this task supposed to run after configure_instance.yml so it will update
# value of ZWE_CACHING_SERVICE_VSAM_DATASET in instance.env.

# Variables:
# - zowe_sysplex
# - zowe_caching_service_port
# - zowe_caching_service_persistent
# - zowe_caching_service_vsam_dsprefix
# - zowe_caching_vsam_storage_class
# - zowe_caching_vsam_volume

# validate variables
- import_role:
    name: common
    tasks_from: validate_variables
  vars:
    variable_list:
    - zowe_sysplex
    - zowe_caching_service_port
    - zowe_caching_service_persistent
    - zowe_caching_service_vsam_dsprefix

- name: Remove ZWECSVSM.jcl or ZWECSVSM.raw.jcl if exists
  raw: >-
    rm -f "{{ work_dir_remote }}/ZWECSVSM.raw.jcl";
    rm -f "{{ work_dir_remote }}/ZWECSVSM.jcl"

- name: Prepare JCL for Monoplex
  when: not zowe_sysplex
  block:
  - name: Check if zowe_caching_vsam_volume has a value
    fail:
      msg: zowe_caching_vsam_volume is required
    when: zowe_caching_vsam_volume is not defined or zowe_caching_vsam_volume is none or zowe_caching_vsam_volume == ''
  - name: Copy SZWESAMP(ZWECSVMP) to USS
    raw: cp "//'{{ zowe_dataset_prefix }}.SZWESAMP(ZWECSVMP)'" "{{ work_dir_remote }}/ZWECSVSM.raw.jcl"

- name: Prepare JCL for Parallel Sysplex
  when: zowe_sysplex
  block:
  - name: Check if zowe_caching_vsam_storage_class has a value
    fail:
      msg: zowe_caching_vsam_storage_class is required
    when: zowe_caching_vsam_storage_class is not defined or zowe_caching_vsam_storage_class is none or zowe_caching_vsam_storage_class == ''
  - name: Copy SZWESAMP(ZWECSVPX) to USS
    raw: cp "//'{{ zowe_dataset_prefix }}.SZWESAMP(ZWECSVPX)'" "{{ work_dir_remote }}/ZWECSVSM.raw.jcl"

- name: Update ZWECSVSM.jcl with configurations
  raw: >-
    cat "{{ work_dir_remote }}/ZWECSVSM.raw.jcl" | \
    sed -e "s+DSNAME=+DSNAME='{{ zowe_dataset_prefix }}.{{ zowe_caching_service_vsam_dsprefix }}{{ zowe_instance_id }}'+"{{ zowe_instance_id }} | \
    sed -e "s+VOLUME=+VOLUME={{ zowe_caching_vsam_volume }}+" | \
    sed -e "s+STORCLAS=+STORCLAS={{ zowe_caching_vsam_storage_class }}+" \
    > "{{ work_dir_remote }}/ZWECSVSM.jcl"

- name: Run ZWECSVSM.jcl
  import_role:
    name: zos
    tasks_from: run_jcl
  vars:
    jcl_filename: "{{ work_dir_remote }}/ZWECSVSM.jcl"

- name: Remove ZWECSVSM.jcl or ZWECSVSM.raw.jcl if exists
  raw: >-
    rm -f "{{ work_dir_remote }}/ZWECSVSM.raw.jcl";
    rm -f "{{ work_dir_remote }}/ZWECSVSM.jcl"

- name: Replace instance.env with settings

- name: Update instance.env
  raw: >-
    cat "{{ zowe_instance_dir }}/instance.env" | \
    sed -e "s+^ZWE_CACHING_SERVICE_PORT=.*\$+ZWE_CACHING_SERVICE_PORT={{ zowe_caching_service_port }}+" | \
    sed -e "s+^ZWE_CACHING_SERVICE_PERSISTENT=.*\$+ZWE_CACHING_SERVICE_PERSISTENT={{ zowe_caching_service_persistent }}+" | \
    sed -e "s+^ZWE_CACHING_SERVICE_VSAM_DATASET=.*\$+ZWE_CACHING_SERVICE_VSAM_DATASET={{ zowe_dataset_prefix }}\.{{ zowe_caching_service_vsam_dsprefix }}{{ zowe_instance_id }}+" \
    > "{{ zowe_instance_dir }}/instance.env.tmp" && \
    mv "{{ zowe_instance_dir }}/instance.env.tmp" "{{ zowe_instance_dir }}/instance.env"

- name: Show caching service settings in instance.env
  raw: cat "{{ zowe_instance_dir }}/instance.env | grep ZWE_CACHING_SERVICE_"
