---
# Add client certificate to security system and map it to the user.

- name: Import client certificate to security systems
  block:
    - import_role:
        name: common
        tasks_from: validate_variables
      vars:
        variable_list:
          - dataset
          - label
          - certificate
    - name: Delete old dataset
      raw: tsocmd "delete '{{ zowe_dataset_prefix }}.CERT.{{ dataset }}' scratch nonvsam"
      ignore_errors: True

    - name: Allocate empty sequentional dataset
      raw: tsocmd "alloc dataset('{{ zowe_dataset_prefix }}.CERT.{{ dataset }}') block(900) lrecl(80) dsorg(ps) recfm(v,b) new"

    - name: Copy certificate to dataset
      raw: tsocmd "OGET '{{ certificate }}' '{{ zowe_dataset_prefix }}.CERT.{{ dataset }}' TEXT"

    - name: Print jwtcert
      raw: cat {{ certificate }}

    - name: Import certificate to RACF
      when: zos_security_system == 'RACF'
      raw: |-
        tsocmd "racdcert add('{{ zowe_dataset_prefix }}.CERT.{{ dataset }}') id({{ zowe_runtime_user }}) withlabel('{{ label }}') trust"
        tsocmd "SETROPTS RACLIST(DIGTCERT, DIGTRING) REFRESH"
        tsocmd "RACDCERT LIST ID({{ zowe_runtime_user }})"
      ignore_errors: True

    - name: Import certificate to TSS
      when: zos_security_system == 'TSS'
      raw: |-
        tsocmd "TSS CHKCERT DCDSN('{{ zowe_dataset_prefix }}.CERT.{{ dataset }}')"
        tsocmd "TSS ADD({{ zowe_runtime_user }}) DIGICERT({{ dataset }}) LABLCERT('{{ label }}') DCDSN('{{ zowe_dataset_prefix }}.CERT.{{ dataset }}') TRUST"
        tsocmd "TSS LIST({{ zowe_runtime_user }}) DIGICERT(ALL)"
      ignore_errors: True

    - name: Import certificate to ACF2
      when: zos_security_system == 'ACF2'
      import_role:
        name: configure
        tasks_from: add_client_certificate_acf2
