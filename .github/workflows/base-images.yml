name: Build Zowe Base Images
on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      release:
        description: 'Set to true if we want to release the base images'
        required: false
        default: ''

jobs:
  build-ubuntu-amd64:
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: zowe-docker-snapshot.jfrog.io
    steps:
      - uses: actions/checkout@v2

      - name: Update registry for release
        if: ${{ github.event.inputs.release == 'true' }}
        run: |
          echo "DOCKER_REGISTRY=zowe-docker-release.jfrog.io" >> $GITHUB_ENV

      - name: Login Jfrog Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: build amd64 image
        working-directory: containers/base/amd64/ubuntu
        run: |
          docker build --no-cache=true -t ompzowe/base-amd64:latest-ubuntu .

      - name: push image
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker manifest create ${{ env.DOCKER_REGISTRY }}/ompzowe/base:latest-ubuntu --amend ompzowe/base-amd64:latest-ubuntu
          docker manifest push ${{ env.DOCKER_REGISTRY }}/ompzowe/base:latest-ubuntu

  build-ubi-amd64:
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: zowe-docker-snapshot.jfrog.io
    steps:
      - uses: actions/checkout@v2

      - name: Update registry for release
        if: ${{ github.event.inputs.release == 'true' }}
        run: |
          echo "DOCKER_REGISTRY=zowe-docker-release.jfrog.io" >> $GITHUB_ENV

      - name: Login Jfrog Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: build amd64 image
        working-directory: containers/base/amd64/ubi
        run: |
          docker build --no-cache=true -t ompzowe/base-amd64:latest-ubi .

      - name: push image
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker manifest create ${{ env.DOCKER_REGISTRY }}/ompzowe/base:latest-ubi --amend ompzowe/base-amd64:latest-ubi
          docker manifest push ${{ env.DOCKER_REGISTRY }}/ompzowe/base:latest-ubi
