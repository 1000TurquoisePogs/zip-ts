################################################################################
# This program and the accompanying materials are made available under the terms of the
# Eclipse Public License v2.0 which accompanies this distribution, and is available at
# https://www.eclipse.org/legal/epl-v20.html
#
# SPDX-License-Identifier: EPL-2.0
#
# Copyright Contributors to the Zowe Project.
################################################################################

zowe:
  # these configurations are used by "zwe install" or "zwe init" commands.
  setup:
    # MVS data set related configurations
    mvs:
      # where Zowe MVS data sets will be installed
      hlq: IBMUSER.ZWE
      # PROCLIB where Zowe STCs will be copied over
      proclib: USER.PROCLIB
      # Zowe PARMLIB
      parmlib: IBMUSER.ZWEV2.CUST.PARMLIB
      # JCL library where Zowe will store temporary JCLs during initialization
      jcllib: IBMUSER.ZWEV2.CUST.JCLLIB
      # APF authorized LOADLIB for Zowe
      # Optional. If it's empty, <hlq>.SZWEAUTH will be APF authorized.
      authLoadlib: 
      # APF authorized LOADLIB for Zowe ZIS Plugins
      authPluginLib: IBMUSER.ZWEV2.CUST.ZWESAPL

    # # Security related configurations. This setup is optional.
    # security:
    #   # security product name. Can be RACF, ACF2 or TSS
    #   product: RACF
    #   # security group name
    #   groups:
    #     # Zowe admin user group
    #     admin: ZWEADMIN
    #     # Zowe STC group
    #     stc: ZWEADMIN
    #     # Zowe SysProg group
    #     sysProg: ZWEADMIN
    #   # security user name
    #   users:
    #     # Zowe runtime user name of main service
    #     zowe: ZWESVUSR
    #     # Zowe runtime user name of Cross Memory Server
    #     xmem: ZWESIUSR
    #     # Zowe runtime user name of Auxilary Service
    #     aux: ZWESIUSR
    #   # STC names
    #   stcs:
    #     # STC name of Zowe main service
    #     zowe: ZWESLSTC
    #     # STC name of Zowe Cross Memory Server
    #     xmem: ZWESISTC
    #     # STC name of Zowe Auxilary Service
    #     aux: ZWESASTC

    # Certificate related configurations
    certificate:
      # Type of certificate storage.
      # Valid values are: PKCS12 or JCERACFKS
      type: PKCS12
      # # distinguished name for Zowe generated certificates. All optional
      # dname:
      #   caCommonName: ""
      #   commonName: ""
      #   orgUnit: ""
      #   org: ""
      #   locality: ""
      #   state: ""
      #   country: ""
      # # validity days for Zowe generated certificates
      # validity: 3650
      # domain names and IPs should be added to certificate SAN
      san:
        - dvipa.my-company.com
        # sample IP address
        - 12.34.56.78
      pkcs12:
        # Keystore directory to store PKCS12 keystores
        directory: /global/zowe/keystore
        # # PKCS12 keystore name.
        # name: localhost
        # # PKCS12 keystore name.
        # password: password
        # caAlias: local_ca
        # caPassword: local_ca_password
      keyring:
        owner: ZWESVUSR
        name: ZoweKeyring

    # VSAM configurations if you are using VSAM as Caching Service storage
    vsam:
      # VSAM data set with Record-Level-Sharing enabled or not
      # Valid values could be: NONRLS or RLS.
      mode: NONRLS
      # Volume name if you are using VSAM in NONRLS mode
      volume: VOL123
      # Storage class name if you are using VSAM in RLS mode
      storageClass:

  # Zowe root directory
  runtimeDirectory: /global/zowe/runtime
  # Where to store runtime logs
  logDirectory: /global/zowe/instance/logs
  # Zowe runtime workspace directory
  workspaceDirectory: /global/zowe/instance/workspace
  # Where extensions are installed
  extensionDirectory: /global/zowe/extensions

  # runtime z/OS job name
  job:
    # job name for Zowe job
    name: ZWE1SV
    # component address space job prefix
    prefix: ZWE1

  externalDomains:
    # this should be the domain name of you Dynamic VIP Address (DVIPA)
    - dvipa.my-company.com
  
  # this should be the port you defined on DVIPA for gateway external port
  externalPort: "7554"

  # you can define any extra environment variables as key/value pairs here
  environments:
    # example to customize SSH port for VT Terminal Desktop app
    # ZWES_ZLUX_SSH_PORT: 22

  # enable debug mode for zowe launch scripts
  launchScript:
    # set to "debug" or "trace" to display more information
    logLevel: ""

  # default certificate
  certificate:
    keystore:
      alias: localhost
      password: password
      file: /global/zowe/keystore/localhost/localhost.keystore.p12
      type: PKCS12
    truststore:
      file: /global/zowe/keystore/localhost/localhost.truststore.p12
      certificateAuthorities: ""
    pem:
      key: /global/zowe/keystore/localhost/localhost.keystore.key
      certificate: /global/zowe/keystore/localhost/localhost.keystore.cer-ebcdic
      certificateAuthority: /global/zowe/keystore/local_ca/localca.cer-ebcdic

  # How we want to verify SSL certificates of services. Valid values are:
  # - STRICT:    will validate if the certificate is trusted in our trust store and
  #              if the certificate Command Name and Subject Alternative Name (SAN)
  #              is validate. This is recommendate for the best security.
  # - NONSTRICT: will validate if the certificate is trusted in our trust store.
  #              This mode does not validate certificate Common Name and Subject
  #              Alternative Name (SAN).
  # - DISABLED:  disable certificate validation. This is NOT recommendated for
  #              security 
  verifyCertificates: STRICT

# customize java
java:
  home: /usr/lpp/java/J8.0_64
# customize node.js
node:
  home: /global/nodejs/v12/node-v12.18.0-os390-s390x
# define z/OSMF
zOSMF:
  host: dvipa.my-company.com
  port: "443"
  applId: IZUDFLT

# this section defines default configurations of components
# by default, like defined here, all components are "enabled".
components:
  gateway:
    enabled: true
    port: 7554
    debug: false

    apiml:
      security:
        auth:
          provider: zosmf
          zosmf:
            jwtAutoconfiguration: auto
            serviceId: zosmf
        authorization:
          endpoint:
            enabled: false
            # default value is https://${ZWE_haInstance_hostname:-localhost}:${ZWE_configs_port}/zss/api/v1/saf-auth
            url:
          provider: zosmf
          resourceClass: ZOWE
          resourceNamePrefix: "APIML."
        jwtInitializerTimeout: 5
        x509:
          enabled: false
          # default value is https://${ZWE_haInstance_hostname:-localhost}:${ZWE_configs_port}/zss/api/v1/certificate/x509/map
          externalMapperUrl:
          # default value is Zowe runtime user defined in zowe.yaml "zowe.setup.security.users.zowe"
          externalMapperUser:
        zosmf:
          applid: IZUDFLT
      service:
        allowEncodedSlashes: true
        corsEnabled: false
    server:
      internal:
      # gateway supports internal connector
        enabled: false
        port: 7556
        ssl:
          enabled: false
          # internal connector can use different certificate
          # certificates:
          #   alias:

    # If we customize this to use different external certificate, than should also
    # define "server.internal.ssl.certificate" and enable "server.internal.ssl.enabled".
    # certificates:
    #   alias:

  discovery:
    enabled: true
    port: 7553
    debug: false
    # Define this value to match your number of Discovery StatefulSet if you are running containerized Zowe
    # replicas: 1

  api-catalog:
    enabled: true
    port: 7552
    debug: false

  caching-service:
    enabled: true
    port: 7555
    debug: false

    storage:
      evictionStrategy: reject
      # can be inMemory, VSAM
      mode: VSAM
      size: 10000
      vsam:
        # your VSAM data set created by ZWECSVSM job
        # this is required if storage mode is VSAM
        name: 

  metrics-service:
    enabled: false
    port: 7551
    debug: false

  app-server:
    enabled: true
    port: 8544
    # we can customize any component with custom certificate
    # the missing definitions will be picked from "zowe.certificate"
    # certificate:
    #   keystore:
    #     alias: app-server
    #   pem:
    #     key: /global/zowe/keystore/localhost/localhost.keystore.app-server.key
    #     certificate: /global/zowe/keystore/localhost/localhost.keystore.app-server.cer-ebcdic

  zss:
    enabled: true
    port: 8542
    crossMemoryServerName: ZWESIS_STD
    tls: true

  jobs-api:
    enabled: false
    port: 8545
  files-api:
    enabled: false
    port: 8547

  explorer-jes:
    enabled: true
  explorer-mvs:
    enabled: true
  explorer-uss:
    enabled: true

  # for extensions, you can add your definition like this
  # my-extension:
  #   enabled: true

# we can customize configurations for each HA instance
# haInstances:
#   # HA instance ID
#   lpar1:
#     # hostname where this instance will be started
#     hostname: lpar1.my-company.com
#     # your &SYSNAME for this LPAR
#     sysname: LPR1
#     # for this HA instance, we didn't customize "components", so it will use default value.
  
#   # HA instance ID, we will start 2 instances on LPAR2
#   # Please note, we can only start one gateway in same LPAR
#   lpar2a:
#     # hostname where this instance will be started
#     hostname: lpar2.my-company.com
#     # your &SYSNAME for this LPAR
#     sysname: LPR2

#     # these configurations will overwrite highest level "components" definitions
#     components:
#       discovery:
#         # use customized port on this instance
#         port: 17553
#       api-catalog:
#         port: 17552
#       app-server:
#         # no app-server in this instance
#         enabled: false
#       zss:
#         # no app-server in this instance
#         enabled: false
#       jobs-api:
#         port: 18545
#         enabled: true
#       files-api:
#         port: 18547
#         enabled: true
#       explorer-jes:
#         port: 18546
#       explorer-mvs:
#         port: 18548
#       explorer-uss:
#         port: 18550
#       caching-service:
#         port: 17555
#   lpar2b:
#     hostname: lpar2.my-company.com
#     # your &SYSNAME for this LPAR
#     sysname: LPR2

#     # these configurations will overwrite highest level "components" definitions
#     components:
#       gateway:
#         enabled: false
#       discovery:
#         enabled: false
#       api-catalog:
#         enabled: false
#       app-server:
#         enabled: false
#         port: 28544
#       zss:
#         port: 28542
#       jobs-api:
#         enabled: true
#       files-api:
#         enabled: false
#       explorer-jes:
#         enabled: false
#       explorer-mvs:
#         enabled: false
#       explorer-uss:
#         enabled: false
#       caching-service:
#         enabled: false
