<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<autoTakeOwnership>true</autoTakeOwnership>
<!-- instance prefix settings -->
    <workflowInfo>
        <workflowID scope="system" isCallable="system">zowe_create_runtime</workflowID>
        <workflowDefaultName>Zowe Create Runtime</workflowDefaultName>
        <workflowDescription>Use this workflow to create the runtime from the convenient build.</workflowDescription>
        <workflowVersion>#ZOWE_VERSION#</workflowVersion>
        <vendor>ZOWE</vendor>
        <General/>
    </workflowInfo>
    <variable name="zowe_build" scope="instance" visibility="public">
        <label>Zowe Build</label>
        <abstract>Path to the extracted convenience build</abstract>
        <description>Path to the folder from the extracted convenience build PAX file.</description>
        <category>Build Location</category>
        <string valueMustBeChoice="false" multiLine="false">
            <regularExpression>~?(\/[^\/]+)+</regularExpression>
            <errorMessage>Please specify proper full USS path ending without a trailing slash.</errorMessage>
            <!-- Specify choices here -->
            <default>~/zowe-#ZOWE_VERSION#</default>
        </string>
    </variable>
    <variable name="zowe_install_path" scope="instance" visibility="public">
        <label>Install Path</label>
        <abstract>Path for the Zowe runtime</abstract>
        <description>Specify the path that will be used for the ZOWE runtime installation</description>
        <category>Installation</category>
        <string valueMustBeChoice="false" multiLine="false">
            <regularExpression>~?(\/[^\/]+)+</regularExpression>
            <errorMessage>Please specify proper full USS path ending without a trailing slash.</errorMessage>
        </string>
    </variable>
    <variable name="zowe_dsn_prefix" scope="instance" visibility="public">
        <label>Zowe Data Set Prefix</label>
        <abstract>Data Set HLQ for the Zowe runtime installation</abstract>
        <description>Specify the data set high level qualifier you want to use for the Zowe runtime installation</description>
        <category>Installation</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>DSNAME</validationType>
        </string>
    </variable>
    <variable name="zowe_zfs_dasd" scope="instance" visibility="public">
        <label>Zowe ZFS DASD</label>
        <abstract>Specify the DASD for the ZFS.</abstract>
        <description>ZFS has to be allocated for the USS folder, specify the DASD option.&lt;br&gt;
        Specify either the volume(s) for non-sms option or the storage class</description>
        <category>Installation</category>
        <string valueMustBeChoice="false" multiLine="false">
            <choice>VOL(?????? ??????)</choice>
            <choice>STORCLAS(????????)</choice>
        </string>
    </variable>
    <variable name="zowe_user_temp" scope="instance" visibility="public">
        <label>Custom Temporary Directory</label>
        <abstract>Custom temporary directory</abstract>
        <description>This is a custom temporary directory that will be used if Zowe Build path is read-only.</description>
        <category>Installation</category>
        <string valueMustBeChoice="false" multiLine="false">
            <regularExpression>~?(\/[^\/]+)+</regularExpression>
            <errorMessage>Please specify proper full USS path ending without a trailing slash.</errorMessage>
        </string>
    </variable>
    <!--atCreate-->
    <step name="define_variables" optional="false">
        <title>Define Variables</title>
        <description>Run this step to define variables for the convenience build runtime installation</description>
        <!-- pre-requisite step -->
        <variableValue name="zowe_build" scope="instance" noPromptIfSet="false" required="true"/>
        <variableValue name="zowe_install_path" scope="instance" noPromptIfSet="false" required="true"/>
        <variableValue name="zowe_dsn_prefix" scope="instance" noPromptIfSet="false" required="true"/>
        <variableValue name="zowe_zfs_dasd" scope="instance" noPromptIfSet="false" required="true"/>
        <variableValue name="zowe_user_temp" scope="instance" noPromptIfSet="false" required="false"/>
        <!-- condition -->
        <instructions substitution="false">Run this step to define the variables.</instructions>
        <weight>1</weight>
        <skills>None</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
    </step>
    <step name="allocate_zfs" optional="false">
        <title>Allocate ZFS data set</title>
        <description>Allocates the ZFS data set for the ZOWE USS.</description>
        <prereqStep name="define_variables"/>
        <!--variableValues-->
        <!-- condition -->
        <instructions substitution="false">Run this step to allocate the ZFS</instructions>
        <weight>1</weight>
        <skills>None</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <template>
            <inlineTemplate substitution="true">//ALLOCZFS EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 DEFINE CL -
 (NAME(${instance-zowe_dsn_prefix}.ZOWEZFS) ZFS SHR(3,3) -
 CYL(1000 1000) -
 ${instance-zowe_zfs_dasd} -
 )
/*</inlineTemplate>
            <submitAs maxRc="0">JCL</submitAs>
            <maxLrecl>1024</maxLrecl>
            <!-- zosmfOutput -->
        </template>
    </step>
    <step name="zowe_mkdir" optional="false">
        <title>Zowe make dir</title>
        <description>Creates the directory for the Zowe USS</description>
        <prereqStep name="define_variables"/>
        <!--variableValues-->
        <!-- condition -->
        <instructions substitution="false">Run this step to create the directory for the Zowe USS</instructions>
        <weight>1</weight>
        <skills>None</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <template>
            <inlineTemplate substitution="true">mkdir -p "${instance-zowe_install_path}"</inlineTemplate>
            <submitAs maxRc="0">shell-JCL</submitAs>
            <maxLrecl>1024</maxLrecl>
            <!-- zosmfOutput -->
        </template>
    </step>
    <step name="mount_zfs" optional="false">
        <title>Mount ZFS</title>
        <description>Mounts the ZFS data set to the created directory</description>
        <prereqStep name="define_variables"/>
        <prereqStep name="allocate_zfs"/>
        <!--variableValues-->
        <!-- condition -->
        <instructions substitution="true">Run this step to mount the ZFS data set.

&lt;p&gt;If you want the mount to be permanent, you should add the following sample to the BPXPRM&lt;i&gt;xx&lt;/i&gt; member:&lt;/p&gt;

&lt;code&gt;MOUNT FILESYSTEM('${instance-zowe_dsn_prefix}.ZOWEZFS')
 MOUNTPOINT('${instance-zowe_install_path}')
 MODE(RDWR)
 TYPE(ZFS) PARM('AGGRGROW')&lt;/code&gt;</instructions>
        <weight>1</weight>
        <skills>None</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <rest>
            <httpMethod>PUT</httpMethod>
            <uriPath substitution="true">/zosmf/restfiles/mfs/${instance-zowe_dsn_prefix}.ZOWEZFS</uriPath>
            <requestBody substitution="true">{
"action":"mount",
"mount-point":"${instance-zowe_install_path}",
"fs-type":"ZFS",
"mode":"rdwr"}</requestBody>
            <expectedStatusCode>204</expectedStatusCode>
            <!-- REST mappings -->
        </rest>
    </step>
    <step name="set_owner" optional="false">
        <title>Set Mountpoint Owner</title>
        <description>This step will set the person running the step as the owner of the mountpoint.</description>
        <prereqStep name="mount_zfs"/>
        <!--variableValues-->
        <!-- condition -->
        <instructions substitution="false">Run this step to set you as the owner of the mountpoint.</instructions>
        <weight>1</weight>
        <skills>z/OS UNIX Administrator</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <template>
            <inlineTemplate substitution="true">echo "chown ${_step-stepOwnerUpper} ${instance-zowe_install_path}" | su</inlineTemplate>
            <submitAs maxRc="0">shell-JCL</submitAs>
            <maxLrecl>1024</maxLrecl>
            <!-- zosmfOutput -->
        </template>
    </step>
    <step name="run_install_script" optional="false">
        <title>Run install script</title>
        <description>This step will run the Zowe convenience build install script.</description>
        <prereqStep name="define_variables"/>
        <prereqStep name="zowe_mkdir"/>
        <prereqStep name="mount_zfs"/>
        <prereqStep name="set_owner"/>
        <!--variableValues-->
        <!-- condition -->
        <instructions substitution="true">Run this step to run the Zowe install script.</instructions>
        <weight>1</weight>
        <skills>None</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <template>
            <inlineTemplate substitution="true">set -x
cd "${instance-zowe_build}/install"
TMPDIR="$!{instance-zowe_user_temp}"
export TMPDIR="$TMPDIR"
sh ./zowe-install.sh -i ${instance-zowe_install_path} -h ${instance-zowe_dsn_prefix}</inlineTemplate>
            <submitAs maxRc="0">shell-JCL</submitAs>
            <maxLrecl>1024</maxLrecl>
            <!-- zosmfOutput -->
        </template>
    </step>
</workflow>