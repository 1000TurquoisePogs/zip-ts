<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<autoTakeOwnership>true</autoTakeOwnership>
<!-- instance prefix settings -->
    <workflowInfo>
        <workflowID scope="none" >configure_xmem</workflowID>
        <workflowDefaultName>Configure Cross Memory Server</workflowDefaultName>
        <workflowDescription>This workflow is used to configure the Cross Memory Server</workflowDescription>
        <workflowVersion>#ZOWE_VERSION#</workflowVersion>
        <vendor>ZOWE</vendor>
        <General/>
    </workflowInfo>
    <variable name="zowe_install_path" scope="instance" visibility="public">
        <label>Install Path</label>
        <abstract>Path for the Zowe runtime</abstract>
        <description>Specify the path that was used for the ZOWE runtime installation</description>
        <category>Installation</category>
        <string valueMustBeChoice="false" multiLine="false">
            <regularExpression>~?(\/[^\/]+)+</regularExpression>
            <errorMessage>Please specify proper full USS path ending without a trailing slash.</errorMessage>
        </string>
    </variable>
    <variable name="zowe_dsn_prefix" scope="instance" visibility="public">
        <label>Zowe Data Set Prefix</label>
        <abstract>Data Set HLQ for the Zowe runtime installation</abstract>
        <description>Specify the data set high level qualifier that was used for the Zowe runtime installation</description>
        <category>Installation</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>DSNAME</validationType>
        </string>
    </variable>
    <variable name="xmem_prefix" scope="instance" visibility="public">
        <label>Cross Memory Server DSN Prefix</label>
        <abstract>Please specify the HLQ that will be used for the XMEM</abstract>
        <description>High Level Qualifier that will be used to install and configure the Cross Memory Server</description>
        <category>Installation</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>DSNAME</validationType>
        </string>
    </variable>
    <variable name="xmem_dasd" scope="instance" visibility="public">
        <label>Cross Memory Server DASD</label>
        <abstract>Please specify the DASD that will be used for the XMEM data sets.</abstract>
        <description>Please specify the DASD that will be used for the XMEM data sets.
Specify the DASD in either of the following formats:
VOL=SER=&lt;i&gt;volume&lt;/i&gt; for non-SMS managed data sets
STORCLAS=&lt;i&gt;storage_class&lt;/i&gt; for SMS managed data sets</description>
        <category>Installation</category>
        <string valueMustBeChoice="false" multiLine="false">
            <choice>VOL=SER=??????</choice>
            <choice>STORCLAS=????????</choice>
        </string>
    </variable>
    <variable name="proclib" scope="instance" visibility="public">
        <label>Procedure Library</label>
        <abstract>Please specify the procedure library for the started task</abstract>
        <description>Specify the PROCLIB data set name that will be used to store the XMEM STC JCL</description>
        <category>Installation</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>DSNAME</validationType>
        </string>
    </variable>
    <variable name="parmlib" scope="instance" visibility="public">
        <label>Parameter Library</label>
        <abstract>Please specify the PARMLIB of your active SCHEDxx member</abstract>
        <description>Please specify the active system PARMLIB where your active SCHEDxx member resides in.</description>
        <category>Parmlib</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>DSNAME</validationType>
        </string>
    </variable>
    <variable name="sched" scope="instance" visibility="public">
        <label>Scheduler member</label>
        <abstract>Please specify the name of the active SCHEDxx member</abstract>
        <description>Please specify the scheduler member that is currently used in the specified PARMLIB.</description>
        <category>Parmlib</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>DSMEMBERNAME</validationType>
            <default>SCHED00</default>
        </string>
    </variable>
    <!--atCreate-->
    <step name="define_variables" optional="false">
        <title>Define Variables</title>
        <description>Define the variable values for the execution</description>
        <!-- pre-requisite step -->
        <variableValue name="zowe_install_path" scope="instance" noPromptIfSet="false" required="true"/>
        <variableValue name="zowe_dsn_prefix" scope="instance" noPromptIfSet="false" required="true"/>
        <variableValue name="xmem_prefix" scope="instance" noPromptIfSet="false" required="true"/>
        <variableValue name="xmem_dasd" scope="instance" noPromptIfSet="false" required="true"/>
        <variableValue name="proclib" scope="instance" noPromptIfSet="false" required="true"/>
        <variableValue name="parmlib" scope="instance" noPromptIfSet="false" required="true"/>
        <variableValue name="sched" scope="instance" noPromptIfSet="false" required="true"/>
        <!-- condition -->
        <instructions substitution="false">Run this step to define the variables for the workflow execution.</instructions>
        <weight>1</weight>
        <skills>None</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <!--template-->
    </step>
    <step name="allocate_xmem" optional="false">
        <title>Allocate Cross Memory Server Data Sets</title>
        <description>Allocates the data sets for the Cross Memory Server.</description>
        <prereqStep name="define_variables"/>
        <!--variableValues-->
        <!-- condition -->
        <instructions substitution="false">Use this step to allocate the data sets required for XMEM</instructions>
        <weight>1</weight>
        <skills>z/OS System Programmer</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <template>
            <inlineTemplate substitution="true">//ALLOCDSS EXEC PGM=IEFBR14
//LOADLIB1 DD DISP=(NEW,CATLG,DELETE),
//    DSN=${instance-xmem_prefix}.LOADLIB,
//    DSNTYPE=LIBRARY,SPACE=(CYL,(10,5,5)),
//    DCB=(RECFM=U),
//    ${instance-xmem_dasd}
//PARMLIB1 DD DISP=(NEW,CATLG,DELETE),
//    DSN=${instance-xmem_prefix}.PARMLIB,
//    DCB=(LRECL=80,RECFM=FB),SPACE=(CYL,(5,3,5)),
//    ${instance-xmem_dasd}</inlineTemplate>
            <submitAs maxRc="0">JCL</submitAs>
            <maxLrecl>1024</maxLrecl>
            <!-- zosmfOutput -->
        </template>
    </step>
    <step name="copy_artifacts" optional="false">
        <title>Copy artifacts</title>
        <description>Copies the necessary artifacts (load modules, parmlib members, etc). Also copies the STC to the proclib.</description>
        <prereqStep name="allocate_xmem"/>
        <!--variableValues-->
        <!-- condition -->
        <instructions substitution="false">Run this step to populate the previously allocated data sets and copy the STC procedures.</instructions>
        <weight>1</weight>
        <skills>z/OS System Programmer</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <template>
            <inlineTemplate substitution="true">set -x

cd "${instance-zowe_install_path}/scripts/utils"
sh zowe-install-xmem.sh "${instance-zowe_dsn_prefix}" "${instance-xmem_prefix}.LOADLIB" "${instance-xmem_prefix}.PARMLIB" "${instance-proclib}"
exit $?</inlineTemplate>
            <submitAs maxRc="0">shell-JCL</submitAs>
            <maxLrecl>1024</maxLrecl>
            <!-- zosmfOutput -->
        </template>
    </step>
    <step name="apf_auth" optional="false">
        <title>APF Authorize Load Library</title>
        <description>This step will dynamically APF authorize the XMEM LOADLIB</description>
        <prereqStep name="copy_artifacts"/>
        <!--variableValues-->
        <!-- condition -->
        <instructions substitution="true">Run this step to dynamically APF authorize the load library.
If you want the APF, to be permanent, add following library to your system authorization: ${instance-xmem_prefix}.LOADLIB</instructions>
        <weight>1</weight>
        <skills>z/OS System Programmer</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <rest>
            <httpMethod>PUT</httpMethod>
            <uriPath substitution="true">/zosmf/restconsoles/consoles/${_step-stepOwnerUpper}</uriPath>
            <requestBody substitution="true">#if(${instance-xmem_dasd.startsWith("STORCLAS")})
#set($dasd = "SMS")
#elseif(${instance-xmem_dasd.startsWith("VOL=SER=")})
#set($dasd = "VOLUME=${instance-xmem_dasd.substring(8)}")
#end
{"cmd":"SETPROG APF,ADD,DSNAME=${instance-xmem_prefix}.LOADLIB,${dasd}"}</requestBody>
            <expectedStatusCode>200</expectedStatusCode>
            <!-- REST mappings -->
        </rest>
    </step>
    <step name="modify_scheduler" optional="false">
        <title>Modify Scheduler</title>
        <description>Modifies the current SCHEDnn PARMLIB member
to run XMEM Server to run in key 4 and be non-swappable</description>
        <prereqStep name="copy_artifacts"/>
        <!--variableValues-->
        <!-- condition -->
        <instructions substitution="false">Run this step to modify the SCHEDnn PARMLIB member</instructions>
        <weight>1</weight>
        <skills>z/OS System Programmer</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <template>
            <inlineTemplate substitution="true">//CONFIGSH EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//SYSUT1   DD DISP=SHR,
//    DSN=${instance-parmlib}(${instance-sched})
//         DD DISP=SHR,
//    DSN=${instance-zowe_dsn_prefix}.SZWESAMP(ZWESISCH)
//SYSUT2   DD DISP=SHR,
//    DSN=${instance-parmlib}(${instance-sched})</inlineTemplate>
            <submitAs maxRc="0">JCL</submitAs>
            <maxLrecl>1024</maxLrecl>
            <!-- zosmfOutput -->
        </template>
    </step>
    <step name="reload_scheduler" optional="false">
        <title>Reload Scheduler Settings</title>
        <description>This step will make the previous changes effective immediately</description>
        <prereqStep name="modify_scheduler"/>
        <!--variableValues-->
        <!-- condition -->
        <instructions substitution="false">Run this step to reload the scheduler settings</instructions>
        <weight>1</weight>
        <skills>z/OS System Programmer</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <rest>
            <httpMethod>PUT</httpMethod>
            <uriPath substitution="true">/zosmf/restconsoles/consoles/${_step-stepOwnerUpper}</uriPath>
            <requestBody substitution="true">#if(${instance-sched.startsWith("SCHED")})
#set($SCH_ID = '${instance-sched.substring(5)}')
{"cmd":"SET SCH=${SCH_ID}"}
#end</requestBody>
            <expectedStatusCode>200</expectedStatusCode>
            <!-- REST mappings -->
        </rest>
    </step>
    <step name="start_xmem" optional="false">
        <title>Start the XMEM server</title>
        <description>This step starts the Cross Memory Server</description>
        <prereqStep name="reload_scheduler"/>
        <!--variableValues-->
        <!-- condition -->
        <instructions substitution="false">Run this step to start the Cross Memory Server.

You can also do it manually with the following command:
/S ZWESISTC,REUSASID=YES

To stop the Cross Memory Server use:
/P ZWESISTC
</instructions>
        <weight>1</weight>
        <skills>z/OS System Programmer</skills>
        <autoEnable>true</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <rest>
            <httpMethod>PUT</httpMethod>
            <uriPath substitution="true">/zosmf/restconsoles/consoles/${_step-stepOwnerUpper}</uriPath>
            <requestBody substitution="true">{"cmd":"S ZWESISTC,REUSASID=YES"}</requestBody>
            <expectedStatusCode>200</expectedStatusCode>
            <!-- REST mappings -->
        </rest>
    </step>
</workflow>