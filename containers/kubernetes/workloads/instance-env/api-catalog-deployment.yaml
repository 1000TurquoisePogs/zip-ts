apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-catalog
  namespace: zowe
  labels:
    app.kubernetes.io/name: zowe
    app.kubernetes.io/instance: zowe
    app.kubernetes.io/version: "1.25.0"
    app.kubernetes.io/component: api-catalog
    app.kubernetes.io/part-of: apiml
    app.kubernetes.io/managed-by: manual
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: zowe
      app.kubernetes.io/instance: zowe
      app.kubernetes.io/component: api-catalog
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zowe
        app.kubernetes.io/instance: zowe
        app.kubernetes.io/component: api-catalog
    spec:
      securityContext:
        runAsUser: 20000
        runAsGroup: 20000
        fsGroup: 20000
      serviceAccountName: zowe-sa
      volumes:
        - name: tmp
          emptyDir: {}
        - name: zowe-runtime
          emptyDir: {}
        - name: zowe-instance
          emptyDir: {}
        - name: zowe-config
          configMap:
            name: zowe-config
        - name: zowe-keystore
          projected:
            sources:
              - configMap:
                  name: zowe-certificates-cm
              - secret:
                  name: zowe-certificates-secret
        - name: zowe-workspace
          persistentVolumeClaim:
            claimName: zowe-workspace-pvc
      containers:
        - name: api-catalog
          image: zowe-docker-release.jfrog.io/ompzowe/api-catalog-services:latest-ubuntu
          imagePullPolicy: Always
          resources:
            requests:
              memory: "384Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "700m"
          ports:
            - name: apicatalog-port
              containerPort: 7552
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 7552
            initialDelaySeconds: 60
            # this should give 90 * periodSeconds(default to 10) seconds about 15 minutes to confirm it's ready
            failureThreshold: 90
          command: ["/bin/bash", "-c"]
          args:
            - "/home/zowe/runtime/bin/internal/run-zowe.sh -c /home/zowe/instance"
          env:
            - name: ZWE_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CMMN_LB
              value: apiml-common-lib/bin/api-layer-lite-lib-all.jar
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "/home/zowe/runtime/bin/internal/container-prestop.sh"]
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: zowe-runtime
              mountPath: "/home/zowe/runtime"
            - name: zowe-instance
              mountPath: "/home/zowe/instance"
            - name: zowe-config
              mountPath: "/home/zowe/instance/instance.env"
              subPath: instance.env
              readOnly: true
            - name: zowe-keystore
              mountPath: "/home/zowe/keystore/"
              readOnly: true
            - name: zowe-workspace
              mountPath: "/home/zowe/instance/workspace"
      initContainers:
        - name: init-zowe
          # image: zowe-docker-release.jfrog.io/ompzowe/zowe-launch-scripts:latest
          image: zowe-docker-snapshot.jfrog.io/ompzowe/zowe-launch-scripts:1.25.0-ubuntu.staging
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "10m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
          volumeMounts:
            - name: zowe-runtime
              mountPath: "/home/zowe/runtime"
            - name: zowe-instance
              mountPath: "/home/zowe/instance"
        - name: update-workspace-permission
          image: busybox:1.28
          command: ['sh', '-c', 'OWNER=`stat -c "%u:%g" /home/zowe/instance/workspace` && echo "Owner of workspace is ${OWNER}" && if [ $OWNER != "20000:20000" ]; then chown -R 20000:20000 /home/zowe/instance/workspace; fi']
          volumeMounts:
            - name: zowe-workspace
              mountPath: "/home/zowe/instance/workspace"
          securityContext:
            runAsUser: 0
            runAsGroup: 0
